<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on BT</title>
    <link>https://awllee.github.io/blogdown-test/</link>
    <description>Recent content in Home on BT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://awllee.github.io/blogdown-test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lorem Ipsum</title>
      <link>https://awllee.github.io/blogdown-test/post/lorem-ipsum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/post/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Quisque mattis volutpat lorem vitae feugiat.</description>
    </item>
    
    <item>
      <title>Note A</title>
      <link>https://awllee.github.io/blogdown-test/note/note-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/note/note-a/</guid>
      <description>A is the first letter of the alphabet.
a for apple </description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>https://awllee.github.io/blogdown-test/post/hello-markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/post/hello-markdown/</guid>
      <description>This sample post is mainly for blogdown users. If you do not use blogdown, you can skip the first section.
1. Markdown or R Markdown This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.</description>
    </item>
    
    <item>
      <title>Note B</title>
      <link>https://awllee.github.io/blogdown-test/note/note-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/note/note-b/</guid>
      <description>B is the second letter of the alphabet
b for banana </description>
    </item>
    
    <item>
      <title>Resourced note</title>
      <link>https://awllee.github.io/blogdown-test/note/resourced-note/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/note/resourced-note/</guid>
      <description>We load some data, which is just x &amp;lt;- 1:100.
 load(&amp;quot;data.RData&amp;quot;) x ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## [19] 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 ## [37] 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 ## [55] 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 ## [73] 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 ## [91] 91 92 93 94 95 96 97 98 99 100  mean(x) ## [1] 50.</description>
    </item>
    
    <item>
      <title>Rmarkdown test page</title>
      <link>https://awllee.github.io/blogdown-test/note/rmarkdown-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/note/rmarkdown-test/</guid>
      <description>Some math
\[\pi(\varphi) = \int \varphi(x) \pi({\rm d}x).\]
Here we are testing RMarkdown rendering.
mc &amp;lt;- function(mu, f, N) { v = 0.0 for (i in 1:N) { x &amp;lt;- mu() v &amp;lt;- v + f(x) } return(v/N) } unif &amp;lt;- function() { return(runif(1)) } g = sin N &amp;lt;- 1000 system.time(y &amp;lt;- mc(unif, g, N)) ## user system elapsed ## 0.026 0.002 0.028 print(paste(y, &amp;quot;, &amp;quot;, 1.0 - cos(1.</description>
    </item>
    
    <item>
      <title>About Hugo Ivy</title>
      <link>https://awllee.github.io/blogdown-test/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/about/</guid>
      <description>This uses a Hugo theme that was ported from Ivy by Yihui Xie. The source code is on Github.
Like Ivy, Hugo-Ivy is also released under the Unlicense, which basically means you just do whatever you want.</description>
    </item>
    
    <item>
      <title>Part 1</title>
      <link>https://awllee.github.io/blogdown-test/note/complicated-note/part1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/note/complicated-note/part1/</guid>
      <description>This is part 1.
Let&amp;rsquo;s try some math. As the source is a Markdown and not an RMarkdown file, one has to use special syntax to enable math rendering. Specifically, one can use
 \\( &amp;lt;LaTeX&amp;gt; \\) and \\[ &amp;lt;LaTeX&amp;gt; \\], `$&amp;lt;LaTeX&amp;gt;$` and `$$&amp;lt;LaTeX&amp;gt;$$`,  for inline and display mode, respectively. In the former, one can use \newline or \\\\\ instead of \\ to break lines.
Let \(x = 1\) and</description>
    </item>
    
    <item>
      <title>Part 2</title>
      <link>https://awllee.github.io/blogdown-test/note/complicated-note/part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awllee.github.io/blogdown-test/note/complicated-note/part2/</guid>
      <description>This is part 2.</description>
    </item>
    
  </channel>
</rss>
